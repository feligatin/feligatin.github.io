//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CertificadoAcreenciaWeb.ServicioWebAS400 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Service1Soap", Namespace="http://tempuri.org/")]
    public partial class Service1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SelectPuroDB2DataSETOperationCompleted;
        
        private System.Threading.SendOrPostCallback EliminarPuroOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectDB2DataSETOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConsultarOperationCompleted;
        
        private System.Threading.SendOrPostCallback SelectPuroOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertSQLDB2OperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertarSQLDB2OperationCompleted;
        
        private System.Threading.SendOrPostCallback EjecutarStoreProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service1() {
            this.Url = global::CertificadoAcreenciaWeb.Properties.Settings.Default.CertificadoAcreenciaWeb_ServicioWebAS400_Service1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SelectPuroDB2DataSETCompletedEventHandler SelectPuroDB2DataSETCompleted;
        
        /// <remarks/>
        public event EliminarPuroCompletedEventHandler EliminarPuroCompleted;
        
        /// <remarks/>
        public event SelectDB2DataSETCompletedEventHandler SelectDB2DataSETCompleted;
        
        /// <remarks/>
        public event ConsultarCompletedEventHandler ConsultarCompleted;
        
        /// <remarks/>
        public event SelectPuroCompletedEventHandler SelectPuroCompleted;
        
        /// <remarks/>
        public event InsertSQLDB2CompletedEventHandler InsertSQLDB2Completed;
        
        /// <remarks/>
        public event InsertarSQLDB2CompletedEventHandler InsertarSQLDB2Completed;
        
        /// <remarks/>
        public event EjecutarStoreProcedureCompletedEventHandler EjecutarStoreProcedureCompleted;
        
        /// <remarks/>
        public event UpDateCompletedEventHandler UpDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectPuroDB2DataSET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectPuroDB2DataSET(string consulta) {
            object[] results = this.Invoke("SelectPuroDB2DataSET", new object[] {
                        consulta});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectPuroDB2DataSETAsync(string consulta) {
            this.SelectPuroDB2DataSETAsync(consulta, null);
        }
        
        /// <remarks/>
        public void SelectPuroDB2DataSETAsync(string consulta, object userState) {
            if ((this.SelectPuroDB2DataSETOperationCompleted == null)) {
                this.SelectPuroDB2DataSETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectPuroDB2DataSETOperationCompleted);
            }
            this.InvokeAsync("SelectPuroDB2DataSET", new object[] {
                        consulta}, this.SelectPuroDB2DataSETOperationCompleted, userState);
        }
        
        private void OnSelectPuroDB2DataSETOperationCompleted(object arg) {
            if ((this.SelectPuroDB2DataSETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectPuroDB2DataSETCompleted(this, new SelectPuroDB2DataSETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EliminarPuro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EliminarPuro(string consulta) {
            object[] results = this.Invoke("EliminarPuro", new object[] {
                        consulta});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EliminarPuroAsync(string consulta) {
            this.EliminarPuroAsync(consulta, null);
        }
        
        /// <remarks/>
        public void EliminarPuroAsync(string consulta, object userState) {
            if ((this.EliminarPuroOperationCompleted == null)) {
                this.EliminarPuroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEliminarPuroOperationCompleted);
            }
            this.InvokeAsync("EliminarPuro", new object[] {
                        consulta}, this.EliminarPuroOperationCompleted, userState);
        }
        
        private void OnEliminarPuroOperationCompleted(object arg) {
            if ((this.EliminarPuroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EliminarPuroCompleted(this, new EliminarPuroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectDB2DataSET", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SelectDB2DataSET(string columnas, string tabla, string condicion) {
            object[] results = this.Invoke("SelectDB2DataSET", new object[] {
                        columnas,
                        tabla,
                        condicion});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SelectDB2DataSETAsync(string columnas, string tabla, string condicion) {
            this.SelectDB2DataSETAsync(columnas, tabla, condicion, null);
        }
        
        /// <remarks/>
        public void SelectDB2DataSETAsync(string columnas, string tabla, string condicion, object userState) {
            if ((this.SelectDB2DataSETOperationCompleted == null)) {
                this.SelectDB2DataSETOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectDB2DataSETOperationCompleted);
            }
            this.InvokeAsync("SelectDB2DataSET", new object[] {
                        columnas,
                        tabla,
                        condicion}, this.SelectDB2DataSETOperationCompleted, userState);
        }
        
        private void OnSelectDB2DataSETOperationCompleted(object arg) {
            if ((this.SelectDB2DataSETCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectDB2DataSETCompleted(this, new SelectDB2DataSETCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Consultar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Consultar(string columnas, string tabla, string condicion, bool agruparResultados, int numeroResultados) {
            object[] results = this.Invoke("Consultar", new object[] {
                        columnas,
                        tabla,
                        condicion,
                        agruparResultados,
                        numeroResultados});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ConsultarAsync(string columnas, string tabla, string condicion, bool agruparResultados, int numeroResultados) {
            this.ConsultarAsync(columnas, tabla, condicion, agruparResultados, numeroResultados, null);
        }
        
        /// <remarks/>
        public void ConsultarAsync(string columnas, string tabla, string condicion, bool agruparResultados, int numeroResultados, object userState) {
            if ((this.ConsultarOperationCompleted == null)) {
                this.ConsultarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConsultarOperationCompleted);
            }
            this.InvokeAsync("Consultar", new object[] {
                        columnas,
                        tabla,
                        condicion,
                        agruparResultados,
                        numeroResultados}, this.ConsultarOperationCompleted, userState);
        }
        
        private void OnConsultarOperationCompleted(object arg) {
            if ((this.ConsultarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConsultarCompleted(this, new ConsultarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SelectPuro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SelectPuro(string consulta) {
            object[] results = this.Invoke("SelectPuro", new object[] {
                        consulta});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SelectPuroAsync(string consulta) {
            this.SelectPuroAsync(consulta, null);
        }
        
        /// <remarks/>
        public void SelectPuroAsync(string consulta, object userState) {
            if ((this.SelectPuroOperationCompleted == null)) {
                this.SelectPuroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSelectPuroOperationCompleted);
            }
            this.InvokeAsync("SelectPuro", new object[] {
                        consulta}, this.SelectPuroOperationCompleted, userState);
        }
        
        private void OnSelectPuroOperationCompleted(object arg) {
            if ((this.SelectPuroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SelectPuroCompleted(this, new SelectPuroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertSQLDB2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertSQLDB2(string sql, string tabla, string columnas, bool bandera) {
            object[] results = this.Invoke("InsertSQLDB2", new object[] {
                        sql,
                        tabla,
                        columnas,
                        bandera});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertSQLDB2Async(string sql, string tabla, string columnas, bool bandera) {
            this.InsertSQLDB2Async(sql, tabla, columnas, bandera, null);
        }
        
        /// <remarks/>
        public void InsertSQLDB2Async(string sql, string tabla, string columnas, bool bandera, object userState) {
            if ((this.InsertSQLDB2OperationCompleted == null)) {
                this.InsertSQLDB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertSQLDB2OperationCompleted);
            }
            this.InvokeAsync("InsertSQLDB2", new object[] {
                        sql,
                        tabla,
                        columnas,
                        bandera}, this.InsertSQLDB2OperationCompleted, userState);
        }
        
        private void OnInsertSQLDB2OperationCompleted(object arg) {
            if ((this.InsertSQLDB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertSQLDB2Completed(this, new InsertSQLDB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertarSQLDB2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertarSQLDB2(string sql, string tabla, string columnas) {
            object[] results = this.Invoke("InsertarSQLDB2", new object[] {
                        sql,
                        tabla,
                        columnas});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertarSQLDB2Async(string sql, string tabla, string columnas) {
            this.InsertarSQLDB2Async(sql, tabla, columnas, null);
        }
        
        /// <remarks/>
        public void InsertarSQLDB2Async(string sql, string tabla, string columnas, object userState) {
            if ((this.InsertarSQLDB2OperationCompleted == null)) {
                this.InsertarSQLDB2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertarSQLDB2OperationCompleted);
            }
            this.InvokeAsync("InsertarSQLDB2", new object[] {
                        sql,
                        tabla,
                        columnas}, this.InsertarSQLDB2OperationCompleted, userState);
        }
        
        private void OnInsertarSQLDB2OperationCompleted(object arg) {
            if ((this.InsertarSQLDB2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertarSQLDB2Completed(this, new InsertarSQLDB2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EjecutarStoreProcedure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool EjecutarStoreProcedure(string cadenaSQL) {
            object[] results = this.Invoke("EjecutarStoreProcedure", new object[] {
                        cadenaSQL});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void EjecutarStoreProcedureAsync(string cadenaSQL) {
            this.EjecutarStoreProcedureAsync(cadenaSQL, null);
        }
        
        /// <remarks/>
        public void EjecutarStoreProcedureAsync(string cadenaSQL, object userState) {
            if ((this.EjecutarStoreProcedureOperationCompleted == null)) {
                this.EjecutarStoreProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEjecutarStoreProcedureOperationCompleted);
            }
            this.InvokeAsync("EjecutarStoreProcedure", new object[] {
                        cadenaSQL}, this.EjecutarStoreProcedureOperationCompleted, userState);
        }
        
        private void OnEjecutarStoreProcedureOperationCompleted(object arg) {
            if ((this.EjecutarStoreProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EjecutarStoreProcedureCompleted(this, new EjecutarStoreProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpDate(string tabla, string actualizar, string condicion) {
            object[] results = this.Invoke("UpDate", new object[] {
                        tabla,
                        actualizar,
                        condicion});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpDateAsync(string tabla, string actualizar, string condicion) {
            this.UpDateAsync(tabla, actualizar, condicion, null);
        }
        
        /// <remarks/>
        public void UpDateAsync(string tabla, string actualizar, string condicion, object userState) {
            if ((this.UpDateOperationCompleted == null)) {
                this.UpDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpDateOperationCompleted);
            }
            this.InvokeAsync("UpDate", new object[] {
                        tabla,
                        actualizar,
                        condicion}, this.UpDateOperationCompleted, userState);
        }
        
        private void OnUpDateOperationCompleted(object arg) {
            if ((this.UpDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpDateCompleted(this, new UpDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelectPuroDB2DataSETCompletedEventHandler(object sender, SelectPuroDB2DataSETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectPuroDB2DataSETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectPuroDB2DataSETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EliminarPuroCompletedEventHandler(object sender, EliminarPuroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EliminarPuroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EliminarPuroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelectDB2DataSETCompletedEventHandler(object sender, SelectDB2DataSETCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectDB2DataSETCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectDB2DataSETCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void ConsultarCompletedEventHandler(object sender, ConsultarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConsultarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConsultarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void SelectPuroCompletedEventHandler(object sender, SelectPuroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SelectPuroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SelectPuroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertSQLDB2CompletedEventHandler(object sender, InsertSQLDB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertSQLDB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertSQLDB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void InsertarSQLDB2CompletedEventHandler(object sender, InsertarSQLDB2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertarSQLDB2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertarSQLDB2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void EjecutarStoreProcedureCompletedEventHandler(object sender, EjecutarStoreProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EjecutarStoreProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EjecutarStoreProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void UpDateCompletedEventHandler(object sender, UpDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591